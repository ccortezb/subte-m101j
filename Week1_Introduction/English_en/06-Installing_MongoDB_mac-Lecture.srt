1
00:00:00,000 --> 00:00:00,110


2
00:00:00,110 --> 00:00:03,659
All right, now, it is time to learn how to install MongoDB.

3
00:00:03,660 --> 00:00:06,300
Now, I'm going to show you how to install it on a Mac, and

4
00:00:06,299 --> 00:00:09,240
then in a separate video segment, Dwight Merriman, is

5
00:00:09,240 --> 00:00:13,289
going to show you how to install it on a PC in Windows.

6
00:00:13,289 --> 00:00:16,419
And that's a video segment from our M102 class.

7
00:00:16,420 --> 00:00:18,320
So let's get started.

8
00:00:18,320 --> 00:00:22,240
The first thing I need to do is find MongoDB, and typically

9
00:00:22,239 --> 00:00:25,209
the way you would do that on the web is you would type

10
00:00:25,210 --> 00:00:27,830
"download MongoDB" into Google, and then it would

11
00:00:27,829 --> 00:00:29,509
bring you a bunch of links.

12
00:00:29,510 --> 00:00:32,649
And in this case, I'm going to go for the first organic

13
00:00:32,649 --> 00:00:36,780
search result, which is at mongodb.org, and that's going

14
00:00:36,780 --> 00:00:38,759
to bring us to this page.

15
00:00:38,759 --> 00:00:41,229
So on this page, you're going to see, along the top, a bunch

16
00:00:41,229 --> 00:00:44,529
of different platforms for which we build MongoDB, and

17
00:00:44,530 --> 00:00:46,870
then on the left here, in this column,

18
00:00:46,869 --> 00:00:48,609
are different releases.

19
00:00:48,609 --> 00:00:52,570
So the one that you want to use is the top one, and that's

20
00:00:52,570 --> 00:00:55,770
going to be our most recent stable release.

21
00:00:55,770 --> 00:00:59,080
Now, the second digit here it tells you whether or not it's

22
00:00:59,079 --> 00:01:00,609
a stable release or not.

23
00:01:00,609 --> 00:01:04,219
If it's an even digit, like 2.4, it's a stable release.

24
00:01:04,219 --> 00:01:08,039
And the last part, which is 0.5, is which maintenance

25
00:01:08,040 --> 00:01:09,390
revision it is.

26
00:01:09,390 --> 00:01:11,409
So in this case, it's the fifth revision,

27
00:01:11,409 --> 00:01:13,469
and it's a 2.4 release.

28
00:01:13,469 --> 00:01:15,219
And then over here on the bottom, there are other

29
00:01:15,219 --> 00:01:17,750
releases that I won't go through right now.

30
00:01:17,750 --> 00:01:20,230
So we're on a Mac, so we're going to pull down a 64-bit

31
00:01:20,230 --> 00:01:23,840
release, and the Mac OS is 64-bit operating system.

32
00:01:23,840 --> 00:01:26,760
On some operating systems, you can get a 32-bit release,

33
00:01:26,760 --> 00:01:29,270
which we don't recommend unless you really need it

34
00:01:29,269 --> 00:01:31,959
because MongoDB uses memory map files.

35
00:01:31,959 --> 00:01:36,119
And using a 32-bit release will limit your files to two

36
00:01:36,120 --> 00:01:39,170
gigabytes, so it'll limit your collections to two gigabytes.

37
00:01:39,170 --> 00:01:43,990
Let's download this 64-bit version for Mac OS, and you

38
00:01:43,989 --> 00:01:45,679
can see it's downloading here on the bottom.

39
00:01:45,680 --> 00:01:48,830
It's about 80-something megabytes, and this is a

40
00:01:48,829 --> 00:01:51,530
pretty fast connection we have here in the building, so we're

41
00:01:51,530 --> 00:01:53,250
already done.

42
00:01:53,250 --> 00:01:58,310
Let's bring up a terminal window on a Mac, and from

43
00:01:58,310 --> 00:02:02,700
there, I'm going to go into the download directory, tilde

44
00:02:02,700 --> 00:02:05,829
downloads directory, and see what's there.

45
00:02:05,829 --> 00:02:09,270
And you can see that we have the tarball that we just

46
00:02:09,270 --> 00:02:11,969
downloaded from the internet.

47
00:02:11,969 --> 00:02:16,009
And I'm going to, now, expand that tarball using the tar xvf

48
00:02:16,009 --> 00:02:18,509
command, and on a Mac, you can also double-click on this in

49
00:02:18,509 --> 00:02:18,959
the finder.

50
00:02:18,960 --> 00:02:20,770
I think it'll work as well.

51
00:02:20,770 --> 00:02:23,240
And then that's going to expand it into a bunch of

52
00:02:23,240 --> 00:02:26,930
different directories, ls, see what directories are there.

53
00:02:26,930 --> 00:02:30,020
I'm going to cd into the directory, ls again.

54
00:02:30,020 --> 00:02:31,150
I see that there's a license, a

55
00:02:31,150 --> 00:02:33,330
readme, and the bin directory.

56
00:02:33,330 --> 00:02:35,260
Bin directory's really the interesting one.

57
00:02:35,259 --> 00:02:38,451
It has a bunch of executables that are related to MongoDB,

58
00:02:38,451 --> 00:02:41,069
and the ones we're going to focus on right now are the

59
00:02:41,069 --> 00:02:45,299
mongod executable, which runs the server process itself, and

60
00:02:45,300 --> 00:02:48,140
the mongo executable, which is the shell that will connect to

61
00:02:48,139 --> 00:02:49,479
that process.

62
00:02:49,479 --> 00:02:52,299
Now, in order to run MongoDB, you need to have the right

63
00:02:52,300 --> 00:02:55,520
directories set up so that it can store the data files away,

64
00:02:55,520 --> 00:02:57,680
and by default, it puts files in the slash

65
00:02:57,680 --> 00:02:59,530
Data slash DB directory.

66
00:02:59,530 --> 00:03:01,930
So on a Mac, in order to write that directory, which is in

67
00:03:01,930 --> 00:03:05,099
Root, I'm going to need to become Root, because that is

68
00:03:05,099 --> 00:03:06,329
owned by Root.

69
00:03:06,330 --> 00:03:09,040
So I'm going to do that right now.

70
00:03:09,039 --> 00:03:10,939
I previously typed the password, so it didn't prompt

71
00:03:10,939 --> 00:03:12,109
me for the password.

72
00:03:12,110 --> 00:03:16,530
Now, I am Root, and then I'm going to use the mkdir command

73
00:03:16,530 --> 00:03:20,289
to create a slash Data directory and another mkdir

74
00:03:20,289 --> 00:03:23,879
command to create a slash Data slash DB directory.

75
00:03:23,879 --> 00:03:27,120
And now, the final thing I'm going to do is I'm going to

76
00:03:27,120 --> 00:03:32,009
use chmod to make that directory world writable so

77
00:03:32,009 --> 00:03:36,090
that I can run the mongod executable as myself.

78
00:03:36,090 --> 00:03:40,719
And I'm going to do that, and then I'll go into slash Data,

79
00:03:40,719 --> 00:03:43,210
and then here, I'll show you the DB directory.

80
00:03:43,210 --> 00:03:48,030
I use the -ld flag for ls to be able to look at a directory

81
00:03:48,030 --> 00:03:50,840
versus search inside it, and you can see, it's a directory.

82
00:03:50,840 --> 00:03:53,500
A DB directory is a directory that's owned by Root, but is

83
00:03:53,500 --> 00:03:55,009
world writable.

84
00:03:55,009 --> 00:03:57,259
Now, having the directory be world writable is probably not

85
00:03:57,259 --> 00:03:59,319
a good idea for production, but for development, it's

86
00:03:59,319 --> 00:04:01,099
fine, so we're going to do that.

87
00:04:01,099 --> 00:04:03,829
I've now exited, so I'm now 10gen user

88
00:04:03,830 --> 00:04:05,480
again on this computer.

89
00:04:05,479 --> 00:04:08,709
And now I'm going to go back into my downloads directory,

90
00:04:08,710 --> 00:04:12,240
and I'm going to go back into the expanded directory and

91
00:04:12,240 --> 00:04:16,879
back into the bin directory, and I'm going to look there in

92
00:04:16,879 --> 00:04:17,670
that directory again.

93
00:04:17,670 --> 00:04:20,149
You can see I've got a bunch of executables, and I'm going

94
00:04:20,149 --> 00:04:23,399
to start up the mongod daemon, and I'm going to do that by

95
00:04:23,399 --> 00:04:26,029
typing dot slash mongod.

96
00:04:26,029 --> 00:04:29,299
Tells the operating system to search inside the current

97
00:04:29,300 --> 00:04:31,819
directory in case there's any other instance of a running

98
00:04:31,819 --> 00:04:33,420
anywhere in the computer.

99
00:04:33,420 --> 00:04:35,780
And if I do that, you can see it's going to print out a

100
00:04:35,779 --> 00:04:36,729
bunch of stuff to the console.

101
00:04:36,730 --> 00:04:39,879
This is the log for mongod, and the first thing it tells

102
00:04:39,879 --> 00:04:41,620
us is that starting it up.

103
00:04:41,620 --> 00:04:44,139
It's giving us the pid that it's running under, telling us

104
00:04:44,139 --> 00:04:48,269
it's listening on the standard TCP port of 27017, and that

105
00:04:48,269 --> 00:04:51,180
it's putting its data in slash Data slash DB, which is what

106
00:04:51,180 --> 00:04:52,300
we just created.

107
00:04:52,300 --> 00:04:54,360
And it gives us a limit, telling us that our rlimits

108
00:04:54,360 --> 00:04:56,050
are set too low for production.

109
00:04:56,050 --> 00:04:57,930
You'd want to increase those for production so that you

110
00:04:57,930 --> 00:04:59,970
wouldn't have any issue with the number of connections and

111
00:04:59,970 --> 00:05:01,900
number of file descriptors that the operating system

112
00:05:01,899 --> 00:05:04,109
supports, but in development, this is going

113
00:05:04,110 --> 00:05:05,689
to be fine for us.

114
00:05:05,689 --> 00:05:07,759
Now that mongod is running, I want to make sure it's

115
00:05:07,759 --> 00:05:10,009
running, so I want to run the Mongo shell.

116
00:05:10,009 --> 00:05:11,509
So I'm going to do that.

117
00:05:11,509 --> 00:05:15,089
I'm going to go back into the downloads directory and back

118
00:05:15,089 --> 00:05:18,489
into that expanded directory, back into the bin directory,

119
00:05:18,490 --> 00:05:21,600
and then I'm going to run the Mongo shell by typing dot

120
00:05:21,600 --> 00:05:22,500
slash mongo.

121
00:05:22,500 --> 00:05:25,980
Notice not dot slash mongo, but dot slash mongo.

122
00:05:25,980 --> 00:05:29,230
And if I do that, it's going to connect, and it's going to

123
00:05:29,230 --> 00:05:30,890
tell me that it's connected to the database.

124
00:05:30,889 --> 00:05:31,959
It's going to give me that warning

125
00:05:31,959 --> 00:05:33,889
about soft limits again.

126
00:05:33,889 --> 00:05:36,569
And now connect it to the test database, and I want to put my

127
00:05:36,569 --> 00:05:38,500
first document in the database.

128
00:05:38,500 --> 00:05:42,000
Let's see, db.people, and I'm going to use an Insert

129
00:05:42,000 --> 00:05:44,959
command, and this document's a pretty simple document.

130
00:05:44,959 --> 00:05:48,250
It's going to have one key called Name with a value of

131
00:05:48,250 --> 00:05:51,970
Andrew, and I'm going to insert that in the shell

132
00:05:51,970 --> 00:05:54,930
return, so it seems to all be good and inserted.

133
00:05:54,930 --> 00:05:57,689
And now, I'm going to try to find the document that I just

134
00:05:57,689 --> 00:06:00,110
created to give myself some confidence that it really

135
00:06:00,110 --> 00:06:02,960
happened, and if I do that, then I can see the document

136
00:06:02,959 --> 00:06:06,259
that I just put the database, which has underscore ID

137
00:06:06,259 --> 00:06:08,349
assigned by the server.

138
00:06:08,350 --> 00:06:12,580
And then over here, there's my name as in the key

139
00:06:12,579 --> 00:06:14,300
for the Name key.

140
00:06:14,300 --> 00:06:17,569
So at this point we have MongoDB installed in the Mac.

141
00:06:17,569 --> 00:06:19,659
We have MongoDB running, and we're running the Mongo shell,

142
00:06:19,660 --> 00:06:21,290
and we're connecting to it.

143
00:06:21,290 --> 00:06:23,840
So MongoDB is now installed on this Mac.

144
00:06:23,839 --> 00:06:25,089


